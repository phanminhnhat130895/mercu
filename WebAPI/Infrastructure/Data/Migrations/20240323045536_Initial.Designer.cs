// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240323045536_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8669411c-4647-4861-9999-54ada55d1e9b"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2452),
                            Email = "nhat.phan@gmail.com",
                            FirstName = "Nhat",
                            LastName = "Phan",
                            PhoneNumber = "0123456789",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("496818f0-f2d8-4229-99d8-90b4453a37ee"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2464),
                            Email = "nam.nguyen@gmail.com",
                            FirstName = "Nam",
                            LastName = "Nguyen",
                            PhoneNumber = "0123456789",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e447210a-1e8c-47b9-b478-a9193c25e7e0"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2465),
                            Email = "hang.truong@gmail.com",
                            FirstName = "Hang",
                            LastName = "Truong",
                            PhoneNumber = "0123456787",
                            Status = 3
                        },
                        new
                        {
                            Id = new Guid("3116ba7e-1c7d-4469-a283-dddc812acc76"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2467),
                            Email = "nhi.nguyen@gmail.com",
                            FirstName = "Nhi",
                            LastName = "Nguyen",
                            PhoneNumber = "0123456786",
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("aa9be609-2e88-40f2-8996-6e674fad71fb"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2468),
                            Email = "phong.van@gmail.com",
                            FirstName = "Phong",
                            LastName = "Van",
                            PhoneNumber = "0123456785",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("6e0d64ba-a4af-4306-afaa-9028dabdc5c5"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2469),
                            Email = "huy.nguyen@gmail.com",
                            FirstName = "Huy",
                            LastName = "Nguyen",
                            PhoneNumber = "0123456784",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.CandidateJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CandidateId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("InterviewerId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<Guid>("JobId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("InterviewerId");

                    b.HasIndex("JobId");

                    b.ToTable("CandidateJobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6dc147a9-2bc7-4c9c-bb4b-dafcbcaa1c67"),
                            CandidateId = new Guid("8669411c-4647-4861-9999-54ada55d1e9b"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2603),
                            InterviewerId = new Guid("c862156f-66f7-469c-bcdd-5bde243da56b"),
                            JobId = new Guid("f575d2b5-9631-487c-b3de-69f15fb2cb32")
                        },
                        new
                        {
                            Id = new Guid("fcc59b50-e8e9-4b22-b11c-6aea127dec65"),
                            CandidateId = new Guid("8669411c-4647-4861-9999-54ada55d1e9b"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2605),
                            InterviewerId = new Guid("eca9f192-dab0-4788-a1bf-462326645785"),
                            JobId = new Guid("1727478b-172e-405a-a784-98d4a4db3cbf")
                        },
                        new
                        {
                            Id = new Guid("b627d34f-1ee4-4f12-81db-e5510b3a60ec"),
                            CandidateId = new Guid("8669411c-4647-4861-9999-54ada55d1e9b"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2607),
                            InterviewerId = new Guid("2c6a098f-2f9b-433d-83c7-3d2459135eb5"),
                            JobId = new Guid("0a2eb4cb-2db5-42a0-83be-e92b5b7ebd91")
                        },
                        new
                        {
                            Id = new Guid("298611ac-9ae2-4799-a93c-6a2f11584ed8"),
                            CandidateId = new Guid("496818f0-f2d8-4229-99d8-90b4453a37ee"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2609),
                            InterviewerId = new Guid("c862156f-66f7-469c-bcdd-5bde243da56b"),
                            JobId = new Guid("f575d2b5-9631-487c-b3de-69f15fb2cb32")
                        },
                        new
                        {
                            Id = new Guid("86b24ec8-fb1d-491a-83a7-2dff10778a8d"),
                            CandidateId = new Guid("496818f0-f2d8-4229-99d8-90b4453a37ee"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2611),
                            InterviewerId = new Guid("eca9f192-dab0-4788-a1bf-462326645785"),
                            JobId = new Guid("1727478b-172e-405a-a784-98d4a4db3cbf")
                        },
                        new
                        {
                            Id = new Guid("c935f46c-1a50-49fe-9b57-ef562e4429d7"),
                            CandidateId = new Guid("496818f0-f2d8-4229-99d8-90b4453a37ee"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2618),
                            InterviewerId = new Guid("2c6a098f-2f9b-433d-83c7-3d2459135eb5"),
                            JobId = new Guid("0a2eb4cb-2db5-42a0-83be-e92b5b7ebd91")
                        },
                        new
                        {
                            Id = new Guid("8f2f528f-3ef6-4600-810d-c1383715265c"),
                            CandidateId = new Guid("e447210a-1e8c-47b9-b478-a9193c25e7e0"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2620),
                            InterviewerId = new Guid("c862156f-66f7-469c-bcdd-5bde243da56b"),
                            JobId = new Guid("f575d2b5-9631-487c-b3de-69f15fb2cb32")
                        },
                        new
                        {
                            Id = new Guid("6a9b120b-e9c1-4bd2-bbff-251f914425cd"),
                            CandidateId = new Guid("e447210a-1e8c-47b9-b478-a9193c25e7e0"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2622),
                            InterviewerId = new Guid("eca9f192-dab0-4788-a1bf-462326645785"),
                            JobId = new Guid("1727478b-172e-405a-a784-98d4a4db3cbf")
                        },
                        new
                        {
                            Id = new Guid("98ffb335-e334-4feb-8a64-92094b7b2359"),
                            CandidateId = new Guid("e447210a-1e8c-47b9-b478-a9193c25e7e0"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2623),
                            InterviewerId = new Guid("2c6a098f-2f9b-433d-83c7-3d2459135eb5"),
                            JobId = new Guid("0a2eb4cb-2db5-42a0-83be-e92b5b7ebd91")
                        },
                        new
                        {
                            Id = new Guid("fb8a31af-c3b7-46b6-8a78-66c612cf9e65"),
                            CandidateId = new Guid("3116ba7e-1c7d-4469-a283-dddc812acc76"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2625),
                            InterviewerId = new Guid("c862156f-66f7-469c-bcdd-5bde243da56b"),
                            JobId = new Guid("f575d2b5-9631-487c-b3de-69f15fb2cb32")
                        },
                        new
                        {
                            Id = new Guid("6a75c8d6-a0b5-41c3-840c-5bb7ee55f902"),
                            CandidateId = new Guid("3116ba7e-1c7d-4469-a283-dddc812acc76"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2627),
                            InterviewerId = new Guid("eca9f192-dab0-4788-a1bf-462326645785"),
                            JobId = new Guid("1727478b-172e-405a-a784-98d4a4db3cbf")
                        },
                        new
                        {
                            Id = new Guid("53b74350-a351-4c8d-83b4-b80a39d42e2b"),
                            CandidateId = new Guid("3116ba7e-1c7d-4469-a283-dddc812acc76"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2628),
                            InterviewerId = new Guid("2c6a098f-2f9b-433d-83c7-3d2459135eb5"),
                            JobId = new Guid("0a2eb4cb-2db5-42a0-83be-e92b5b7ebd91")
                        },
                        new
                        {
                            Id = new Guid("aa3b9534-c7d3-4708-ab09-12b0177674aa"),
                            CandidateId = new Guid("aa9be609-2e88-40f2-8996-6e674fad71fb"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2630),
                            InterviewerId = new Guid("c862156f-66f7-469c-bcdd-5bde243da56b"),
                            JobId = new Guid("f575d2b5-9631-487c-b3de-69f15fb2cb32")
                        },
                        new
                        {
                            Id = new Guid("351bf92a-7524-4276-b8e5-6b4cfdeec7a9"),
                            CandidateId = new Guid("aa9be609-2e88-40f2-8996-6e674fad71fb"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2633),
                            InterviewerId = new Guid("eca9f192-dab0-4788-a1bf-462326645785"),
                            JobId = new Guid("1727478b-172e-405a-a784-98d4a4db3cbf")
                        },
                        new
                        {
                            Id = new Guid("2cef4eab-31cf-44ab-ba7c-dbdfa05baf96"),
                            CandidateId = new Guid("aa9be609-2e88-40f2-8996-6e674fad71fb"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2635),
                            InterviewerId = new Guid("2c6a098f-2f9b-433d-83c7-3d2459135eb5"),
                            JobId = new Guid("0a2eb4cb-2db5-42a0-83be-e92b5b7ebd91")
                        },
                        new
                        {
                            Id = new Guid("e6308d8d-67bd-4aaf-9bef-bd7bb7b75f49"),
                            CandidateId = new Guid("6e0d64ba-a4af-4306-afaa-9028dabdc5c5"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2637),
                            InterviewerId = new Guid("c862156f-66f7-469c-bcdd-5bde243da56b"),
                            JobId = new Guid("f575d2b5-9631-487c-b3de-69f15fb2cb32")
                        },
                        new
                        {
                            Id = new Guid("1532ea6e-a51a-4b3c-bffb-399dc39c1665"),
                            CandidateId = new Guid("6e0d64ba-a4af-4306-afaa-9028dabdc5c5"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2638),
                            InterviewerId = new Guid("eca9f192-dab0-4788-a1bf-462326645785"),
                            JobId = new Guid("1727478b-172e-405a-a784-98d4a4db3cbf")
                        },
                        new
                        {
                            Id = new Guid("3ea2bd7c-8cb3-4d85-aebb-fa4fdaf52848"),
                            CandidateId = new Guid("6e0d64ba-a4af-4306-afaa-9028dabdc5c5"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2640),
                            InterviewerId = new Guid("2c6a098f-2f9b-433d-83c7-3d2459135eb5"),
                            JobId = new Guid("0a2eb4cb-2db5-42a0-83be-e92b5b7ebd91")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Interviewer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Interviewers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c862156f-66f7-469c-bcdd-5bde243da56b"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2555),
                            Email = "adam.jobs@gmail.com",
                            FirstName = "Adam",
                            LastName = "Jobs",
                            PhoneNumber = "0123456667"
                        },
                        new
                        {
                            Id = new Guid("eca9f192-dab0-4788-a1bf-462326645785"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2557),
                            Email = "jack.reacher@gmail.com",
                            FirstName = "Jack",
                            LastName = "Reacher",
                            PhoneNumber = "0123456668"
                        },
                        new
                        {
                            Id = new Guid("2c6a098f-2f9b-433d-83c7-3d2459135eb5"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2559),
                            Email = "robert.sanchez@gmail.com",
                            FirstName = "Robert",
                            LastName = "Sanchez",
                            PhoneNumber = "0123456669"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f575d2b5-9631-487c-b3de-69f15fb2cb32"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2577),
                            Description = "Job 1 Description",
                            ExpiredDate = new DateTime(2024, 4, 22, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2573),
                            Status = 1,
                            Title = "Job 1"
                        },
                        new
                        {
                            Id = new Guid("1727478b-172e-405a-a784-98d4a4db3cbf"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2579),
                            Description = "Job 2 Description",
                            ExpiredDate = new DateTime(2024, 4, 22, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2578),
                            Status = 1,
                            Title = "Job 2"
                        },
                        new
                        {
                            Id = new Guid("0a2eb4cb-2db5-42a0-83be-e92b5b7ebd91"),
                            DateCreated = new DateTime(2024, 3, 23, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2580),
                            Description = "Job 3 Description",
                            ExpiredDate = new DateTime(2024, 4, 22, 11, 55, 35, 982, DateTimeKind.Local).AddTicks(2580),
                            Status = 1,
                            Title = "Job 3"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CandidateJob", b =>
                {
                    b.HasOne("Domain.Entities.Candidate", "Candidate")
                        .WithMany("Jobs")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Interviewer", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Interviewer");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Domain.Entities.Candidate", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
